/*! tailwindcss v4.1.16 | MIT License | https://tailwindcss.com */
@layer properties;
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.top-\[0\] {
  top: 0;
}
.left-\[0\] {
  left: 0;
}
.box-border {
  box-sizing: border-box;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.h-\[100\%\] {
  height: 100%;
}
.w-\[100\%\] {
  width: 100%;
}
.w-\[100\] {
  width: 100;
}
.columns-3 {
  columns: 3;
}
.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.flex-col {
  flex-direction: column;
}
.items-center {
  align-items: center;
}
.justify-center {
  justify-content: center;
}
.gap-\[20px\] {
  gap: 20px;
}
.mt-auto {
  margin-top: auto;
}
.border {
  border-style: var(--tw-border-style);
  border-width: 1px;
}
.border-\[2px\] {
  border-style: var(--tw-border-style);
  border-width: 2px;
}
.border-\[\#00FFFF\] {
  border-color: #00FFFF;
}
.border-\[\#555\] {
  border-color: #555;
}
.border-\[00FFFF\] {
  border-color: 00FFFF;
}
.bg-\[\#FFE152\] {
  background-color: #FFE152;
}
.bg-\[FFE152\] {
  background-color: FFE152;
}
.p-\[15px\] {
  padding: 15px;
}
.opacity-0 {
  opacity: 0%;
}
.transition-opacity {
  transition-property: opacity;
  transition-timing-function: var(--tw-ease, ease);
  transition-duration: var(--tw-duration, 0s);
}
.duration-300 {
  --tw-duration: 300ms;
  transition-duration: 300ms;
}
.group-hover\:opacity-10 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 10%;
    }
  }
}
.group-hover\:opacity-25 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 25%;
    }
  }
}
.group-hover\:opacity-50 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 50%;
    }
  }
}
.group-hover\:opacity-75 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 75%;
    }
  }
}
.group-hover\:opacity-85 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 85%;
    }
  }
}
.group-hover\:opacity-95 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 95%;
    }
  }
}
.group-hover\:opacity-99 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 99%;
    }
  }
}
.group-hover\:opacity-100 {
  &:is(:where(.group):hover *) {
    @media (hover: hover) {
      opacity: 100%;
    }
  }
}
.hover\:border-\[\#FF00FF\] {
  &:hover {
    @media (hover: hover) {
      border-color: #FF00FF;
    }
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-duration: initial;
    }
  }
}
